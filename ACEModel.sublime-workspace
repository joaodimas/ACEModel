{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Max",
				"MaxMagnituteOfChangeInTechEnv"
			],
			[
				"max",
				"maxMagnitudeOfChange\tparam"
			],
			[
				"curr",
				"currentPeriod"
			],
			[
				"Cyc",
				"TypeOfCycle"
			],
			[
				"tec",
				"techId\tstatement"
			],
			[
				"tech",
				"technology"
			],
			[
				"closes",
				"closestTech"
			],
			[
				"Nu",
				"NumberOfTasks"
			],
			[
				"sumO",
				"sumOfHammingDist\tstatement"
			],
			[
				"cl",
				"clearAllFakes\tfunction"
			],
			[
				"ass",
				"assertEqual\tfunction"
			],
			[
				"exp",
				"expPrice\tstatement"
			],
			[
				"mark",
				"marketSize\tstatement"
			],
			[
				"M",
				"MaximumOptimalTechnologies\tstatement"
			],
			[
				"Optimal",
				"MaximumOptimalTechnologies\tstatement"
			],
			[
				"cur",
				"currentOptimalTechs\tstatement"
			],
			[
				"curre",
				"currentOptimalTechs"
			],
			[
				"Initial",
				"InitialOptimalTechnologies\tstatement"
			],
			[
				"mean",
				"meanMarketSize"
			],
			[
				"re",
				"revenues\tstatement"
			],
			[
				"PEriodSta",
				"PeriodStartOfGrowth\tstatement"
			],
			[
				"RateOf",
				"RateOfGrowthInMeanMarketSize\tstatement"
			],
			[
				"get",
				"getFirmFlatData\tfunction"
			],
			[
				"business",
				"business_cycles\tmodule"
			],
			[
				"wri",
				"writeFile\tfunction"
			],
			[
				"Period",
				"PeriodRangeToSavePanelData"
			],
			[
				"in",
				"industry\tstatement"
			],
			[
				"att",
				"attractionForImitation\tstatement"
			],
			[
				"attrac",
				"attractionForResearch\tstatement"
			],
			[
				"imi",
				"imitating\tstatement"
			],
			[
				"cros",
				"crossSectionalData"
			],
			[
				"crossse",
				"crosssectional_data\tmodule"
			],
			[
				"times",
				"timestamp\tparam"
			],
			[
				"is",
				"isEquivalent\tfunction"
			],
			[
				"period",
				"periodData\tstatement"
			],
			[
				"sum",
				"sumOfP\tstatement"
			],
			[
				"true",
				"trueTotalNmbCombs\tstatement"
			],
			[
				"assertEq",
				"assertEquivalent\tfunction"
			],
			[
				"min",
				"minDistance\tstatement"
			],
			[
				"da",
				"datetime\tclass"
			],
			[
				"indus",
				"industry\tstatement"
			],
			[
				"updateSumOf",
				"updateSumOfActiveSurvivorsMC\tfunction"
			],
			[
				"totalI",
				"totalInvestmentInImitation\tstatement"
			],
			[
				"totalIn",
				"totalInvestmentInInnovation\tstatement"
			],
			[
				"append",
				"appendFakeRandom\tfunction"
			],
			[
				"indu",
				"industry\tstatement"
			],
			[
				"partia",
				"partial_runSimulation\tstatement"
			],
			[
				"list",
				"listOfResults\tparam"
			],
			[
				"Num",
				"NumberOfSimulations\tstatement"
			],
			[
				"result",
				"resultQueue\tstatement"
			],
			[
				"rele",
				"release"
			],
			[
				"process",
				"processResults"
			],
			[
				"Indus",
				"IndustrySimulation\tclass"
			],
			[
				"multi",
				"multiAggregateData\tstatement"
			],
			[
				"ind",
				"industry"
			],
			[
				"sim",
				"simulate"
			],
			[
				"Industry",
				"IndustrySimulation"
			],
			[
				"Atomic",
				"AtomicCounter\tclass"
			],
			[
				"proce",
				"processResearch"
			],
			[
				"IS",
				"isEnabledForTrace\tfunction"
			],
			[
				"prev",
				"prevTechnology"
			],
			[
				"previous",
				"previousOptimal\tstatement"
			],
			[
				"current",
				"currentPeriod\tstatement"
			],
			[
				"gene",
				"generateStochasticCycle\tfunction"
			],
			[
				"totalInvest",
				"totalInvestmentInResearch\tstatement"
			],
			[
				"total",
				"totalInvestmentInResearch"
			],
			[
				"Tech",
				"Technology"
			],
			[
				"taskTo",
				"taskToCopy"
			],
			[
				"flip",
				"flipRandomTask"
			],
			[
				"exitin",
				"exitingFirms\tstatement"
			],
			[
				"sur",
				"survivorsOfPreviousPeriod\tstatement"
			],
			[
				"prob",
				"probOfBeingObserved\tstatement"
			],
			[
				"av",
				"averageProximityToOptimalTech"
			],
			[
				"activeSurviv",
				"activeSurvivorsOfPreviousPeriod\tstatement"
			],
			[
				"Imi",
				"ImitationCost\tstatement"
			],
			[
				"attraction",
				"attractionForNoResearch\tstatement"
			],
			[
				"we",
				"wealth\tstatement"
			],
			[
				"attract",
				"attractionForInnovation\tstatement"
			],
			[
				"Cost",
				"InnovationCost\tstatement"
			],
			[
				"old",
				"oldTechnology\tstatement"
			],
			[
				"getProbOf",
				"getProbOfInnovation"
			],
			[
				"getProb",
				"getProbOfResearch\tfunction"
			],
			[
				"firm",
				"firmId\tstatement"
			],
			[
				"Inno",
				"InnovationCost\tstatement"
			],
			[
				"attr",
				"attractionForRD\tstatement"
			],
			[
				"market",
				"marketSize"
			],
			[
				"RateO",
				"RateOfPersistenceInDemand"
			],
			[
				"out",
				"output"
			],
			[
				"incumbe",
				"incumbentFirms"
			],
			[
				"calcu",
				"calculateHIndex"
			],
			[
				"active",
				"activeIncumbentFirms"
			],
			[
				"Lo",
				"LogLevel\tstatement"
			],
			[
				"consol",
				"consoleTrace\tstatement"
			],
			[
				"magni",
				"magnitudeOfChange"
			],
			[
				"youn",
				"youngestAge"
			],
			[
				"survivors",
				"survivorsOfPreviousPeriod"
			],
			[
				"youngest",
				"youngestAge\tstatement"
			],
			[
				"currentSum",
				"currentSumOfHammingDistances\tstatement"
			],
			[
				"currentSumO",
				"currentSumOfHammingDistances"
			],
			[
				"ne",
				"newTech"
			],
			[
				"inactive",
				"inactiveIncumbentFirms\tstatement"
			],
			[
				"inac",
				"inactiveIncumbentFirms"
			],
			[
				"survivor",
				"survivorsOfCurrentPeriod\tstatement"
			],
			[
				"surviv",
				"survivorsOfCurrentPeriod\tstatement"
			],
			[
				"updateExp",
				"updateExpPrice"
			],
			[
				"survi",
				"survivorsOfPreviousPeriod\tstatement"
			],
			[
				"previ",
				"previousPeriodSurvivors\tstatement"
			],
			[
				"nextPErio",
				"nextPeriodIncumbentFirms\tstatement"
			],
			[
				"potentia",
				"potentialEntrants\tstatement"
			],
			[
				"incumbent",
				"incumbentFirms\tstatement"
			],
			[
				"acti",
				"activeIncumbentFirms\tstatement"
			],
			[
				"class",
				"classmethod\tclass"
			],
			[
				"Number",
				"NumberOfPeriods\tstatement"
			],
			[
				"exit",
				"exitingFirms\tstatement"
			],
			[
				"ente",
				"enteringFirms\tstatement"
			],
			[
				"Firm",
				"FirmStatus\tclass"
			],
			[
				"outs",
				"outsiderFirms"
			],
			[
				"e",
				"exitingFirms"
			],
			[
				"decide",
				"decideIfLeaves\tfunction"
			],
			[
				"deci",
				"decideIfEnters\tfunction"
			],
			[
				"descri",
				"describeActiveFirms\tfunction"
			],
			[
				"p",
				"processPeriod\tfunction"
			],
			[
				"getExp",
				"getExpProfits"
			],
			[
				"getEx",
				"getExpectedEquilibriumPrice\tfunction"
			],
			[
				"cu",
				"currentSumOfMarginalCosts\tstatement"
			],
			[
				"firms",
				"activeFirms\tstatement"
			],
			[
				"getEqui",
				"getEquilibriumOutputRate\tfunction"
			],
			[
				"Fi",
				"FixedCost\tstatement"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/LaTeXing/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXing/LaTeX.sublime-build",
					"Clean up Files"
				]
			],
			[
				"Packages/LaTeXing/LaTeX.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 67.0,
		"last_filter": "enable linting",
		"selected_items":
		[
			[
				"enable linting",
				"Anaconda: Enable linting on this file"
			],
			[
				"disable linting",
				"Anaconda: Disable linting on this file"
			],
			[
				"push",
				"git: push"
			],
			[
				"stage",
				"git: quick stage"
			],
			[
				"stack",
				"Automatic Backups: Step backward in history"
			],
			[
				"quick s",
				"git: quick stage"
			],
			[
				"qui",
				"git: quick stage"
			],
			[
				"STAGE",
				"git: quick stage"
			],
			[
				"git stage",
				"git: quick stage"
			],
			[
				"pull",
				"git: pull"
			],
			[
				"GIT STAGE",
				"git: quick stage"
			],
			[
				"comit",
				"git: commit"
			],
			[
				"git pull",
				"git: pull"
			],
			[
				"status",
				"git: status"
			],
			[
				"pus",
				"git: push"
			],
			[
				"git status",
				"git: status"
			],
			[
				"git",
				"git: rebase"
			],
			[
				"git reset",
				"git: reset"
			],
			[
				"commit",
				"git: quick commit"
			],
			[
				"reset",
				"git: reset"
			],
			[
				"anaconda",
				"Anaconda: Enable linting on this file"
			],
			[
				"show all",
				"SublimeLinter: Show All Errors"
			],
			[
				"nex",
				"Anaconda: Next lint error"
			],
			[
				"next",
				"SublimeLinter: Next Error"
			],
			[
				"next error",
				"SublimeLinter: Next Error"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"git ",
				"git: remote remove"
			],
			[
				"git igno",
				"git: ignore current file"
			],
			[
				"quick st",
				"git: quick stage"
			],
			[
				"ST",
				"git: quick stage"
			],
			[
				"pu",
				"git: push"
			],
			[
				"stage and",
				"git: quick stage current file and commit"
			],
			[
				"git:stage",
				"git: quick stage"
			],
			[
				"git:qui",
				"git: quick commit"
			],
			[
				"git:push",
				"git: push"
			],
			[
				"git: commit",
				"git: quick commit"
			],
			[
				"gitbut",
				"github: create pull request"
			],
			[
				"git:",
				"git: commit"
			],
			[
				"git: ",
				"github: open repo"
			],
			[
				"git: quick s",
				"git: quick stage current file and commit"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Remove Package"
			],
			[
				"package control",
				"Package Control: List Packages"
			],
			[
				"build",
				"Build: Custom Quick Build"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"Package control: inst",
				"Package Control: Install Package"
			]
		],
		"width": 512.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/jdimas/GitHub/ACEModel",
		"/Users/jdimas/GitHub/ACEModel/data",
		"/Users/jdimas/GitHub/ACEModel/model"
	],
	"file_history":
	[
		"/Users/jdimas/GitHub/ACEModel/simulation.py",
		"/Users/jdimas/GitHub/ACEModel/model/parameters.py",
		"/Users/jdimas/GitHub/LaTeX/MasterThesis/Sections/log_of_period_1000.tex",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-05-22T18h14m54s.TRACE.log",
		"/Users/jdimas/GitHub/ACEModel/model/industry.py",
		"/Users/jdimas/GitHub/ACEModel/model/firm.py",
		"/Users/jdimas/GitHub/ACEModel/model/demand.py",
		"/Users/jdimas/GitHub/ACEModel/model/technology.py",
		"/Users/jdimas/GitHub/ACEModel/model/exogenous_effects.py",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-05-14T18h59m05s.TRACE.log",
		"/Users/jdimas/GitHub/ACEModel/UpdateRunCommit.sh",
		"/Users/jdimas/GitHub/ACEModel/UpdateRunCommitShutdown.sh",
		"/Users/jdimas/GitHub/ACEModel/model/util/export_to_csv.py",
		"/Users/jdimas/GitHub/ACEModel/model/cycle_type.py",
		"/Users/jdimas/GitHub/ACEModel/model/description.py",
		"/Users/jdimas/GitHub/ACEModel/tests/test_firm.py",
		"/Users/jdimas/GitHub/ACEModel/model/crosssectional_data.py",
		"/Users/jdimas/GitHub/ACEModel/model/timeseries_data.py",
		"/Users/jdimas/GitHub/ACEModel/tests/test_industry.py",
		"/Users/jdimas/GitHub/ACEModel/tests/test_demand.py",
		"/Users/jdimas/GitHub/ACEModel/tests/test_technology.py",
		"/Users/jdimas/GitHub/ACEModel/model/util/combinatorics.py",
		"/Users/jdimas/GitHub/ACEModel/tests/test_random.py",
		"/Users/jdimas/GitHub/ACEModel/model/util/random.py",
		"/Users/jdimas/GitHub/ACEModel/model/util/logger.py",
		"/Users/jdimas/GitHub/ACEModel/teste.py",
		"/Users/jdimas/GitHub/ACEModel/model/shocks.py",
		"/Users/jdimas/Library/Application Support/Alfred 3/Alfred.alfredpreferences/workflows/user.workflow.06A83327-DFCF-42E1-9293-437FF21C4979/info.plist",
		"/Users/jdimas/Downloads/iCalendar.ics",
		"/Users/jdimas/Documents/ProgramasRFB/IRPF2017/TryLock2017.txt",
		"/Users/jdimas/Google Drive/test.txt",
		"/Users/jdimas/GitHub/ACEModel/model/test.py",
		"/Users/jdimas/GitHub/ACEModel/model/panel_data.py",
		"/Users/jdimas/GitHub/ACEModel/model/business_cycles.py",
		"/Users/jdimas/GitHub/ACEModel/data/MeanMktSize32/ACEModel.2017-04-19T13h49m07s.params.txt",
		"/Users/jdimas/GitHub/ACEModel/UploadResults.sh",
		"/Users/jdimas/GitHub/ACEModel/model/aggregate_data.py",
		"/Users/jdimas/GitHub/ACEModel/model/util/__init__.py",
		"/Users/jdimas/GitHub/ACEModel/model/__init__.py",
		"/Users/jdimas/GitHub/ACEModel/tests/test_combinatorics.py",
		"/Users/jdimas/GitHub/ACEModel/data/Chapter 4/500 replications/DIV.gph",
		"/Users/jdimas/GitHub/ACEModel/WaitingSemaphore.py",
		"/Users/jdimas/GitHub/ACEModel/Parameters.py",
		"/Users/jdimas/GitHub/ACEModel/Logger.py",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-30T21h05m06s.INFO.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-30T20h22m51s.INFO.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-30T16h45m56s.INFO.log",
		"/Users/jdimas/GitHub/ACEModel/ExportToCSV.py",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-30T15h29m59s.INFO.log",
		"/Users/jdimas/GitHub/ACEModel/Description.py",
		"/Users/jdimas/GitHub/ACEModel/Firm.py",
		"/Users/jdimas/GitHub/ACEModel/BusinessCycles.py",
		"/Users/jdimas/GitHub/ACEModel/Technology.py",
		"/Users/jdimas/GitHub/ACEModel/Shocks.py",
		"/Users/jdimas/GitHub/ACEModel/Industry.py",
		"/Users/jdimas/GitHub/ACEModel/Simulation.py",
		"/Users/jdimas/GitHub/ACEModel/.gitignore",
		"/Users/jdimas/GitHub/ACEModel/data/Validating means of 5 simulations.xlsx",
		"/Users/jdimas/GitHub/ACEModel/AggregateData.py",
		"/Users/jdimas/GitHub/ACEModel/MultiAggregateData.py",
		"/Users/jdimas/GitHub/ACEModel/Demand.py",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-24T15h01m22s.DETAILED.log",
		"/Users/jdimas/GitHub/ACEModel/Atomic.py",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-24T14h56m14s.AGGREGATE.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-24T14h57m10s.AGGREGATE.log",
		"/Users/jdimas/GitHub/ACEModel/AtomicSum.py",
		"/Users/jdimas/GitHub/ACEModel/AtomicCounter.py",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-23T18h42m46s.AGGREGATE.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-23T18h37m42s.AGGREGATE.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-23T18h37m42s.DETAILED.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-23T18h30m07s.AGGREGATE.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-23T18h30m07s.DETAILED.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-22T16h29m05s.INFO.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-21T19h39m59s.INFO.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-21T17h05m07s.INFO.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-21T17h05m07s.AGGREGATE.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-21T17h05m07s.DETAILED.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-20T19h35m43s.DETAILED.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-21T16h10m48s.DETAILED.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-21T16h05m51s.DETAILED.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-20T17h36m04s.DETAILED.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-20T17h39m32s.DETAILED.log",
		"/Users/jdimas/GitHub/ACEModel/untitled.py",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-19T18h36m32s.AGGREGATE.log",
		"/Users/jdimas/GitHub/ACEModel/data/ACEModel.2017-03-19T18h36m32s.INFO.log",
		"/Users/jdimas/GitHub/ACEModel/UpdateAndRun.sh",
		"/Users/jdimas/GitHub/ACEModel/PerformanceTests.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/Testes.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/ExportToDTA.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/Parameters.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/Technology.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/Logger.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/AggregateData.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/ExportToCSV.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/Industry.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/Shocks.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/Firm.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/Demand.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/Testes",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/DetailedData.py",
		"/Users/jdimas/Library/Application Support/Sublime Text 3/Packages/Anaconda/Default (OSX).sublime-keymap",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/data/ACEModel.2017-03-16T20h21m28s.log",
		"/Users/jdimas/Library/Application Support/Sublime Text 3/Packages/Local History/settings/LocalHistory.sublime-settings",
		"/Users/jdimas/Library/Application Support/Sublime Text 3/Packages/User/LocalHistory.sublime-settings",
		"/Users/jdimas/Library/Application Support/Sublime Text 3/Packages/User/Automatic Backups.sublime-settings",
		"/Users/jdimas/Library/Application Support/Sublime Text 3/Packages/Automatic Backups/Automatic Backups.sublime-settings",
		"/Users/jdimas/Library/Application Support/Sublime Text 3/Packages/Automatic Backups/Default (OSX).sublime-keymap",
		"/Users/jdimas/Library/Application Support/Sublime Text 3/Packages/Pretty JSON/Pretty JSON.sublime-settings",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/data/ACEModel.2017-03-16T15h33m19s.log",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/ACEModel.sublime-project",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/Data.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/Thing.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/data/ACEModel.2017-03-15T10h55m18s.json",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/data/ACEModel.2017-03-15T10h49m11s.json",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/data/ACEModel.2017-03-15T10h51m30s.json",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/data2017-03-15T10:41:29.369432.json",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/data.json",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/data.txt",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/FirmStatus.py",
		"/Users/jdimas/Library/Application Support/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/.project",
		"/Users/jdimas/Library/Application Support/Sublime Text 3/Packages/User/ACEModel.sublime-build",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel/ACEModel.sublime-build",
		"/Users/jdimas/Library/Application Support/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/Software/MagnumSolo.cpp",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/Software/untitled.cpp",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/Software/Firm.py",
		"/Users/jdimas/Google Drive/PSME/Material/Thesis/Software/Industry.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/jdimas/GitHub/ACEModel,-*/data/*",
			"/Users/jdimas/GitHub/ACEModel",
			"/Users/jdimas/GitHub/ACEModel,-*/backup/*",
			"/Users/jdimas/Google Drive/PSME/Material/Thesis/ACEModel",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"\\\\newline\\\\newline",
			"\\n",
			"Before:",
			"Current technology",
			"Technology to imitate:",
			"New technology:",
			"survivores",
			"%",
			"&",
			"[SIM 001][PERIOD 1000] ",
			"[PERIOD 1000]",
			"        ",
			"waveamplitude",
			"HIT BY A LARGE TECHNOLOGICAL SHOCK",
			"TECHNOLOGICAL SHOCK",
			"IntervalLargeTechnologicalShocks",
			"whiteNoise",
			"WhiteNoise",
			"storePrevData",
			"updateExpWealthAfterThisPeriod",
			"expPrice =",
			"expPrice",
			"Selecting a firm",
			"closerTech",
			"Technology(",
			"prevTechnology",
			"Technology(",
			"        ",
			"Random.",
			"Random",
			"generateRandomTechnology",
			"Random.",
			"self.industry.random",
			"Random.",
			"self.industry.random",
			"Random.",
			"cls",
			"@classmethod",
			"cls.",
			"marketShare",
			"expOutput",
			"currentOptimalTechs[1]",
			"industry.simulationNumberNumber",
			"industry.simulation",
			"timestamp",
			"industry.timestamp",
			"timestamp",
			"imitate(",
			"processImitation",
			"processInnovation",
			"getProbOfInnovation",
			"getProbOfResearch",
			"InitialAttractionForImitation",
			"InitialAttractionForInnovation",
			"InitialAttractionForNoResearch",
			"InitialAttractionForResearch",
			"attractionForImitation",
			"attractionForInnovation",
			"attractionForNoResearch",
			"attractionForResearch",
			"reduce(lambda x, y: x.magnitudeOfChange + y.magnitudeOfChange, industry.currentOptimalTechs)",
			"model.shocks",
			"currentOptimalTech",
			"currentOptimalTech[",
			"currentOptimalTech",
			"currentOptimalTech.",
			"currentOptimalTech",
			"magnitude",
			"currentOptimalTech",
			"PeriodStartOfTechnologicalExogenousEffects",
			"processExogenousEffects",
			"Shocks",
			"techDistToOptimal",
			"optimal",
			"minMarket",
			"PeriodsOfConstantDemand",
			"industry.currentMeanMarketSize",
			"Parameters.MeanMarketSize",
			"averageProximityToOptimalTech",
			"NumberOfTasks",
			"96",
			"97",
			"96",
			"updateMarginalCost",
			"Parameters.getParameters()",
			"Cycle.DETERMINISTIC",
			"Cycle.STOCHASTIC",
			"from model.business_cycles import Cycle",
			"PeriodStartOfTechChange",
			"System",
			"Parameters.LogLevel",
			"NumberOfSimulations",
			"SystemConfig.NumberOfSimulations",
			"Parameters.",
			"self.",
			"toJSON",
			"self.data",
			"updateExpWealthAfterThisPeriod",
			"model.aggregate_data",
			"AggregateData",
			"updateWealth",
			"updateEqPrice",
			"#assert ",
			" assert ",
			"assert",
			"transformRandomlyWithMaxDistance",
			"self.",
			"sumOfPrevIncumbentsMC",
			"numberOfPrevIncumbents",
			"threads",
			"is full",
			"Waiting result from pipe by processResult()",
			"Acquiring a semaphore to create a Pipe",
			"Semaphore File released. Count:",
			"Semaphore File released",
			"File semaphore released",
			"Error",
			"Pipe semaphore released.",
			"[SIM 106]",
			"\\[SIM 14\\]",
			"Waiting result from pipe by main process",
			"Simulation completed",
			"pipe",
			"Result sent",
			"released",
			"Semaphore",
			"\", \\(industry.currentPeriod, ",
			"\", industry.currentPeriod\\)"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\\\newline",
			"\\\\newline\\n",
			"survivors",
			"\\%",
			"\\&",
			"",
			"        cls.",
			"IntervalOfLargeTechnologicalShocks",
			"storePreviousData",
			"closestTech",
			"        cls.",
			"random.",
			"self.industry.random.",
			"self",
			"",
			"self.",
			"currentOptimalTechs[0]",
			"industry.simulationNumber",
			"imitate",
			"innovate",
			"getProbToInnovate",
			"getProbToResearch",
			"InitialAttractionToImitate",
			"InitialAttractionToInnovate",
			"InitialAttractionToNotResearch",
			"InitialAttractionToResearch",
			"attractionToImitate",
			"attractionToInnovate",
			"attractionToNotResearch",
			"attractionToResearch",
			"sum([tech.magnitudeOfChange for tech in industry.currentOptimalTechs])",
			"model.exogenous_effects",
			"currentOptimalTechs[",
			"PeriodStartOfTechnologicalShocks",
			"process",
			"ExogenousEffects",
			"PeriodStartOfCycles",
			"industry.demand.meanMarketSize",
			"industry.currentMeanMarketSize",
			"CycleType.DETERMINISTIC",
			"CycleType.STOCHASTIC",
			"from model.cycle_type import CycleType",
			"PeriodStartOfTechnologicalShocks",
			"loglevel",
			"NumberOfIndependentReplications",
			"Parameters.NumberOfSimulations",
			"SystemConfig.",
			"",
			"self.timeSeriesData",
			"model.timeseries_data",
			"TimeSeriesData",
			"#assert ",
			"industry.",
			"trueSumOfPrevIncumbentsMC",
			"trueNumberOfPrevIncumbents",
			"processes",
			"\", \\(industry.simulation, industry.currentPeriod, ",
			"\", \\(industry.simulation, industry.currentPeriod\\)\\)",
			"\\[SIM {:d}\\]\\[PERIOD {:d}\\]\\[FIRM {:d}\\]",
			"\", \\(self.industry.simulation, self.industry.currentPeriod, self.firmId",
			", \\(self.industry.simulation, self.industry.currentPeriod",
			"\\\", \\(self.simulation, self.currentPeriod\\)\\)",
			"\", \\(self.simulation, self.currentPeriod\\)\\)",
			", \\(self.simulation, self.currentPeriod,",
			", (self.simulation, self.currentPeriod,",
			"Logger.info\\(\"[SIM {:d}]",
			"Logger.debug\\(\"[SIM {:d}]",
			"Logger.trace\\(\"[SIM {:d}]",
			"MaxMagnituteOfChangeInTechEnv",
			"RateOfChangeInTechEnv",
			"FixedCostOfImitation",
			"FixedCostOfInnovation",
			"FixedProductionCost",
			"ThresholdNetWealthForSurvival",
			"TimeHorizon",
			"",
			" += ",
			" += 1",
			"0",
			"self.firmId\\)",
			", industry.currentPeriod\\)",
			", self.currentPeriod\\)",
			", \\(",
			", (",
			"PeriodsOfConstantDemand",
			"{:d}",
			"self.currentPeriod",
			"Logger.",
			"Technology.logger",
			"1",
			"Research",
			"\",\\n\"",
			"\",\\n",
			"MeanMarketSize",
			"cls.logger",
			" self.logger.",
			"logger.trace(",
			"logger.debug(",
			"logger.info(",
			"logging.getLogger().trace(",
			"logging.debug(",
			"logging.info(",
			"console",
			"trace",
			"debug",
			"Logger.trace",
			"trace",
			"Logger.debug",
			"Logger.debug(",
			" ",
			"",
			"\",\\n\"",
			"\"\\n\"",
			"",
			",\\n",
			"",
			"Logger",
			"\\\\\": \" \\+ ",
			"\\n                    \"\\\\\"",
			"\\n                    \"\\\\",
			"\\n                    \"\\\"",
			"\", \"\\n",
			"profits",
			"mc",
			"self",
			"\\\\par\\n",
			"\\\\par\\n ",
			"\\n\\\\par"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.GitSavvy":
	{
		"height": 112.0
	},
	"output.exec":
	{
		"height": 221.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.show_commit_info":
	{
		"height": 112.0
	},
	"pinned_build_system": "Anaconda Python Builder",
	"project": "ACEModel.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 321.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
